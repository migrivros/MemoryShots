DROP TABLE if EXISTS PhotoCategories;
DROP TABLE if EXISTS Comments;
DROP TABLE if EXISTS Scores;
DROP TABLE if EXISTS Photos;
DROP TABLE if EXISTS categories;
DROP TABLE if EXISTS UsersFollow;
DROP TABLE if EXISTS Users;
DROP TABLE if EXISTS Inappropiateword;




CREATE TABLE if NOT EXISTS Users(
userId INT NOT NULL AUTO_INCREMENT UNIQUE,
firstName VARCHAR(60) NOT NULL,
lastName VARCHAR(60) NOT NULL,
phoneNumber VARCHAR(12) UNIQUE,
email VARCHAR(250) NOT NULL UNIQUE,
userName VARCHAR(80) NOT NULL UNIQUE,
password VARCHAR(500) NOT NULL,
profilePhoto VARCHAR(300),
UNIQUE(firstName, lastName),
PRIMARY KEY (userId));

CREATE TABLE if NOT EXISTS UsersFollow(
userFollowId INT NOT NULL AUTO_INCREMENT UNIQUE,
user1 INT NOT NULL,
user2 INT NOT NULL,
PRIMARY KEY (userFollowId),
FOREIGN KEY (user1) REFERENCES Users(userId) ON DELETE CASCADE,
FOREIGN KEY (user2) REFERENCES Users(userId) ON DELETE CASCADE);


CREATE TABLE if NOT EXISTS Photos(
photoId INT NOT NULL AUTO_INCREMENT UNIQUE,
photoURL VARCHAR(300) NOT NULL,
uploadDate DATETIME DEFAULT CURRENT_TIMESTAMP() NOT NULL,
title VARCHAR(300) NOT NULL,
description VARCHAR(500),
visibility VARCHAR(60) NOT NULL,
userId INT NOT NULL,
PRIMARY KEY (photoId),
FOREIGN KEY (userId) REFERENCES Users(userId) ON DELETE CASCADE,
CONSTRAINT invalidVisibility CHECK (visibility IN ('PÃšBLICA','PRIVADA')));


CREATE TABLE if NOT EXISTS Scores(
scoreId INT NOT NULL UNIQUE AUTO_INCREMENT,
scoreDate DATETIME DEFAULT CURRENT_TIMESTAMP() NOT NULL,
value DECIMAL NOT NULL,
userId INT NOT NULL,
photoId INT NOT NULL,
UNIQUE (userId, photoId),
PRIMARY KEY (scoreId),
FOREIGN KEY (photoId) REFERENCES Photos(photoId) ON DELETE CASCADE,
FOREIGN KEY (userId) REFERENCES Users(userId) ON DELETE CASCADE,
CONSTRAINT invalidScoreValue CHECK (value>= 1 AND value <= 5));


CREATE TABLE if NOT EXISTS Comments(
commentId INT NOT NULL AUTO_INCREMENT UNIQUE,
text VARCHAR(500) NOT NULL,
commentDate DATETIME DEFAULT CURRENT_TIMESTAMP() NOT NULL,
userId INT NOT NULL,
photoId INT NOT NULL,
PRIMARY KEY (commentId),
FOREIGN KEY (userId) REFERENCES Users(userId) ON DELETE CASCADE,
FOREIGN KEY (photoId) REFERENCES Photos(photoId) ON DELETE RESTRICT); 


CREATE TABLE if NOT EXISTS Categories(
categoryId INT NOT NULL AUTO_INCREMENT UNIQUE,
categoryName VARCHAR(80) NOT NULL UNIQUE,
PRIMARY KEY (categoryId));


CREATE TABLE if NOT EXISTS PhotoCategories(
PhotoCategoryId INT NOT NULL UNIQUE AUTO_INCREMENT,
photoId INT NOT NULL,
categoryId INT NOT NULL,
UNIQUE(photoId,categoryId),
PRIMARY KEY (PhotoCategoryId),
FOREIGN KEY (photoId) REFERENCES Photos(photoId) ON DELETE CASCADE,
FOREIGN KEY (categoryId) REFERENCES Categories(categoryId) ON DELETE CASCADE);


CREATE TABLE if NOT EXISTS InappropiateWord(
inappropiateWordId INT NOT NULL UNIQUE AUTO_INCREMENT,
word VARCHAR(200) NOT NULL UNIQUE,
PRIMARY KEY (inappropiateWordId));

